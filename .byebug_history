c
user.errors.full_messages
user
user.valid?
n
user.valid?
user
c
user.valid?
n
user.valid?
n
user
n
user.valid?
user
c
user
c
user
n
user.valid?
user
c
expect(user.errors[:first_name]).to include("can't be blank")
expect(user.errors[:first_name])
c
user.errors.full_messages
user.valid?
user
n
user
c
comment.valid?
comment
n
comment
c
comment
c
expect(post.errors.full_messages)
post.errors.full_messages
post.valid?
post
c
post.errors.full_messagesc
post.errors.full_messages
post.errors
expect(post.errors[:user_id]
post.errors.full_messages
post.valid?
post
c
post.errors.full_messages
post.valid?
post
c
expect(post.errors[:content]).to include("can't be blank")
expect(post.errors[:content])
post.errors.full_messages
post.valid?
post
c
expect(post.errors[:title]).to include("can't be blank")
expect(post.errors[:title])
post.errors.full_messages
post.valid?
post
c
expect(comment.comments).to match_array([reply1, reply2])c
expect(comment.comments).to match_array([reply1, reply2])
comment.comments
comment
comment.comments
reply2
reply1
reply2 = create(:comment, parent: comment)
reply1 = create(:comment, parent: comment)
comment
c
reply1
comment.comments
comment
n
comment.comments
reply1
comment
c
comment.parent
comment
comment.parent
expect(comment.parent)
expect(comment.parent).to eq(parent_comment)
expect(comment.parent_id).to eq(parent_comment.id)
comment.parent_id
comment.parent_id = parent_comment.id
comment
parent_comment
expect(parent_comment.id).to eq(rent_comment = create(:comment))
comment.parent_id = parent_comment.id
comment.parent_id
parent_comment
comment
expect(comment).to be_valid
expect(comment).to be_invalid
expect(comment).to be_valid
expect(comment)
expect(comment.errors[:post_id])
comment.errors.full_messages
comment.valid?
comment
c
expect(comment.errors[:content]).to include("can't be blank")
expect(comment.errors[:content])
comment.errors.full_messages
comment.valid?
comment
c
expect(comment.errors[:post_id])
comment.errors[:post_id].messages
comment.errors[:post_id].message
comment.errors[:post_id].full_message
comment.errors[:post_id].full_messages
comment.errors[:post_id]
comment.errors[:comment]
comment.errors[:comment].full_messages
comment.errors.full_messages
comment.errors
expect(comment.errors[:post_id])
comment.valid?
comment
c
comment.errors.full_messages
comment.valid?
comment
c
comment.errors.full_messages
comment.valid?
comment
c
comment.errors.full_messages
comment.valid?
content.valid?
comment.content
content
comment
c
comment.errors.full_messages
comment.valid?
comment
c
match_array([reply1, reply2])
expect(comment.comments).to match_array([reply1, reply2])
comment.comments
reply2
reply1
comment
n
reply2
reply1
comment
n
reply2
reply1
comment
reply1
n
reply1
comment
c
parent_comment
comment.parent
expect(comment.parent)
comment.parent_id
comment
n
parent_comment
c
comment.errors.full_messages
comment.valid?
comment
c
comment.errors.full_messages
comment.erors.full_messages
comment.valid?
comment
c
comment
c
Comment.last
comment.save
Comment.last
comment
c
comment
c
comment.errors.full_messages
comment.valid?
comment
c
n
post.valid?
post
n
post
n
post.valid?
post
n
post.valid?
post
c
n
post
post.valid?
post
c
n
post
n
post
c
comment.errors.full_messages
comment.valid?
comment
c
n
comment
n
comment
c
comment.valid?
comment
n
comment
c
comment.valid?
comment
c
comment.errors.full_messages
comment.valid?
comment
post
c
comment.errors.full_messages
comment.valid?
comment
c
post.errors[:title]
post.errors
post
c
n
post.errors.full_messages
post.valid?
post
